From 7ce03b9f1c3a35ea43e037ce29c1f9048c4da1d8 Mon Sep 17 00:00:00 2001
From: hololeap <hololeap@users.noreply.github.com>
Date: Sun, 24 Sep 2023 15:55:37 -0600
Subject: [PATCH 1/1] Remove LaTeX labels tests

Tests depend on unstable output behavior from pandoc

Signed-off-by: hololeap <hololeap@users.noreply.github.com>
---
 test/test-pandoc-crossref.hs | 55 ------------------------------------
 1 file changed, 55 deletions(-)

diff --git a/test/test-pandoc-crossref.hs b/test/test-pandoc-crossref.hs
index aff327a..434995d 100644
--- a/test/test-pandoc-crossref.hs
+++ b/test/test-pandoc-crossref.hs
@@ -291,61 +291,6 @@ main = hspec $ do
         runCrossRef m' Nothing crossRefBlocks b `shouldBe` Native.demochapters
 #endif
 
-    describe "LaTeX" $ do
-      let test = test' nullMeta
-          infixr 5 `test`
-          test' m i o = getLatex m i `shouldBe` o
-          getLatex m i = either (fail . show) T.unpack (runPure $ writeLaTeX def (Pandoc m $ runCrossRef m (Just $ Format "latex") crossRefBlocks (toList i)))
-
-      describe "Labels" $ do
-
-        it "Section labels" $
-          headerWith ("sec:section_label1", [], []) 1 (text "Section")
-            <> para (citeGen "sec:section_label" [1])
-            `test` "\\hypertarget{sec:section_label1}{%\n\\section{Section}\\label{sec:section_label1}}\n\nsec.~\\ref{sec:section_label1}"
-
-        it "Image labels" $
-          figure "img.png" "" "Title" Nothing "figure_label1"
-            <> para (citeGen "fig:figure_label" [1])
-            `test` "\\begin{figure}\n\\hypertarget{fig:figure_label1}{%\n\\centering\n\\includegraphics{img.png}\n\\caption{Title}\\label{fig:figure_label1}\n}\n\\end{figure}\n\nfig.~\\ref{fig:figure_label1}"
-
-        it "Eqn labels" $
-          equation "x^2" "some_equation1"
-            <> para (citeGen "eq:some_equation" [1])
-            `test` "\\begin{equation}\\protect\\hypertarget{eq:some_equation1}{}{x^2}\\label{eq:some_equation1}\\end{equation}\n\neq.~\\ref{eq:some_equation1}"
-
-#ifdef FLAKY
-        it "Tbl labels" $
-          table' "A table" "some_table1"
-            <> para (citeGen "tbl:some_table" [1])
-            `test` concat (
-              [ "\\hypertarget{tbl:some_table1}{}\n"
-              , "\\begin{longtable}[]{@{}@{}}\n"
-              , "\\caption{\\label{tbl:some_table1}A table}\\tabularnewline\n"
-              , "\\toprule\\noalign{}\n"
-              , "\\endfirsthead\n"
-              , "\\endhead\n"
-              , "\\bottomrule\\noalign{}\n"
-              , "\\endlastfoot\n"
-              , " \\\\\n"
-              , "\\end{longtable}\n\n"
-              , "tbl.~\\ref{tbl:some_table1}"
-              ] :: [String])
-#endif
-
-        it "Code block labels" $ do
-          codeBlock' "A code block" "some_codeblock1"
-            <> para (citeGen "lst:some_codeblock" [1])
-            `test` "\\begin{codelisting}\n\n\\caption{A code block}\n\n\\hypertarget{lst:some_codeblock1}{%\n\\label{lst:some_codeblock1}}%\n\\begin{Shaded}\n\\begin{Highlighting}[]\n\\OtherTok{main ::} \\DataTypeTok{IO}\\NormalTok{ ()}\n\\end{Highlighting}\n\\end{Shaded}\n\n\\end{codelisting}\n\nlst.~\\ref{lst:some_codeblock1}"
-          codeBlock' "A code block with under_score" "some_codeblock1"
-            <> para (citeGen "lst:some_codeblock" [1])
-            `test` "\\begin{codelisting}\n\n\\caption{A code block with under\\_score}\n\n\\hypertarget{lst:some_codeblock1}{%\n\\label{lst:some_codeblock1}}%\n\\begin{Shaded}\n\\begin{Highlighting}[]\n\\OtherTok{main ::} \\DataTypeTok{IO}\\NormalTok{ ()}\n\\end{Highlighting}\n\\end{Shaded}\n\n\\end{codelisting}\n\nlst.~\\ref{lst:some_codeblock1}"
-          let test1 = test' $ setMeta "codeBlockCaptions" True nullMeta
-              infixr 5 `test1`
-          codeBlockForTable "some_codeblock1" <> paraText ": A code block"
-            <> para (citeGen "lst:some_codeblock" [1])
-            `test1` "\\begin{codelisting}\n\n\\caption{A code block}\n\n\\hypertarget{lst:some_codeblock1}{%\n\\label{lst:some_codeblock1}}%\n\\begin{Shaded}\n\\begin{Highlighting}[]\n\\OtherTok{main ::} \\DataTypeTok{IO}\\NormalTok{ ()}\n\\end{Highlighting}\n\\end{Shaded}\n\n\\end{codelisting}\n\nlst.~\\ref{lst:some_codeblock1}"
-
 citeGen :: T.Text -> [Int] -> Inlines
 citeGen p l = cite (mconcat $ map (cit . (p<>) . T.pack . show) l) $ text $
   "[" <> T.intercalate "; " (map (("@"<>) . (p<>) . T.pack . show) l) <> "]"
-- 
2.41.0

