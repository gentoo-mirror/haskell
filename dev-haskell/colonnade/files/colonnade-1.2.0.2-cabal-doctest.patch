From f3932c4498c1b51849a4c54ddab93f2d571cbf18 Mon Sep 17 00:00:00 2001
From: hololeap <hololeap@protonmail.com>
Date: Sun, 2 Mar 2025 11:07:41 -0700
Subject: [PATCH 1/1] Migrate to cabal-doctest

doctest pulls in the out-of-scope packages if they are installed on the
system. The best workaround is to use migrate to cabal-doctest.

Bug: https://github.com/gentoo-haskell/gentoo-haskell/issues/1231
Signed-off-by: hololeap <hololeap@protonmail.com>
--- a/Setup.hs
+++ b/Setup.hs
@@ -1,2 +1,22 @@
+{-# LANGUAGE CPP #-}
+{-# OPTIONS_GHC -Wall #-}
+module Main (main) where
+
+#ifndef MIN_VERSION_cabal_doctest
+#define MIN_VERSION_cabal_doctest(x,y,z) 0
+#endif
+
+#if MIN_VERSION_cabal_doctest(1,0,0)
+
+import Distribution.Extra.Doctest ( defaultMainWithDoctests )
+main :: IO ()
+main = defaultMainWithDoctests "doctests"
+
+#else
+
 import Distribution.Simple
+
+main :: IO ()
 main = defaultMain
+
+#endif
--- a/colonnade.cabal
+++ b/colonnade.cabal
@@ -27,9 +27,14 @@ author: Andrew Martin
 maintainer: andrew.thaddeus@gmail.com
 copyright: 2016 Andrew Martin
 category: web
-build-type: Simple
+build-type: Custom
 cabal-version: >=1.10
 
+custom-setup
+  setup-depends:
+      base
+    , cabal-doctest >=1.0.9 && <1.1
+
 library
   hs-source-dirs:      src
   exposed-modules:
@@ -46,18 +51,20 @@ library
   default-language:    Haskell2010
   ghc-options: -Wall
 
-test-suite test
+test-suite doctests
   type: exitcode-stdio-1.0
   hs-source-dirs: test
   main-is: Main.hs
   build-depends:
       base >= 4.7 && <= 5
-    , colonnade
     , doctest
     , semigroupoids
     , ansi-wl-pprint
     , QuickCheck
     , fast-logger
+    , directory
+    , filepath
+    , base-compat
   default-language: Haskell2010
 
 source-repository head
--- a/src/Colonnade.hs
+++ b/src/Colonnade.hs
@@ -1,3 +1,4 @@
+{-# LANGUAGE CPP #-}
 {-# LANGUAGE DataKinds #-}
 {-# LANGUAGE RankNTypes #-}
 
@@ -95,7 +96,7 @@ import qualified Data.Vector as Vector
 -- >>> let showDollar = (('$':) . show) :: Int -> String
 -- >>> colHouse = mconcat [headed "Color" (show . color), headed "Price" (showDollar . price)]
 -- >>> :t colHouse
--- colHouse :: Colonnade Headed House [Char]
+-- colHouse :: Colonnade Headed House String
 -- >>> let houses = [House Green 170000, House Blue 115000, House Green 150000]
 -- >>> putStr (ascii colHouse houses)
 -- +-------+---------+
@@ -179,10 +180,10 @@ fromMaybe c (E.Colonnade v) = E.Colonnade $ flip Vector.map v $
 -- >>> let allColors = [Red,Green,Blue]
 -- >>> let encColor = columns (\c1 c2 -> if c1 == c2 then "âœ“" else "") (Headed . show) allColors
 -- >>> :t encColor
--- encColor :: Colonnade Headed Color [Char]
+-- encColor :: Colonnade Headed Color String
 -- >>> let encHouse = headed "Price" (showDollar . price) <> lmap color encColor
 -- >>> :t encHouse
--- encHouse :: Colonnade Headed House [Char]
+-- encHouse :: Colonnade Headed House String
 -- >>> putStr (ascii encHouse houses)
 -- +---------+-----+-------+------+
 -- | Price   | Red | Green | Blue |
@@ -272,9 +273,15 @@ replaceWhen = modifyWhen . const
 --   of prefixing many column headers can become annoying. The solution
 --   that a 'Cornice' offers is to nest headers:
 --   
+#if __GLASGOW_HASKELL__ >= 961
 --   >>> let cor = mconcat [cap "Person" colPersonFst, cap "House" colHouseSnd]
 --   >>> :t cor
---   cor :: Cornice Headed ('Cap 'Base) (Person, House) [Char]
+--   cor :: Cornice Headed (Cap Base) (Person, House) String
+#else
+--   >>> let cor = mconcat [cap "Person" colPersonFst, cap "House" colHouseSnd]
+--   >>> :t cor
+--   cor :: Cornice Headed (Cap' Base') (Person, House) String
+#endif
 --   >>> putStr (asciiCapped cor personHomePairs)
 --   +-------------+-----------------+
 --   | Person      | House           |
--- a/test/Main.hs
+++ b/test/Main.hs
@@ -1,6 +1,25 @@
+import Build_doctests (flags, pkgs, module_sources)
 import Test.DocTest
+import GHC.IO.Encoding (setLocaleEncoding)
+import System.Directory (getCurrentDirectory, makeAbsolute)
+import System.FilePath.Posix ((</>))
+import System.IO (utf8)
 
 main :: IO ()
-main = doctest
-  [ "src"
-  ]
+main = do
+    setLocaleEncoding utf8
+    pwd    <- getCurrentDirectory
+    prefix <- makeAbsolute pwd
+
+    let customFlags =
+            [ "-package-env=-"
+            , "-hide-all-packages"
+            , "-no-user-package-db"
+            , "-package-db=" ++ prefix </> "dist/package.conf.inplace"
+            ]
+
+    let modules =
+            [ "src"
+            ]
+
+    doctest $ flags ++ customFlags ++ pkgs ++ module_sources
-- 
2.45.3

