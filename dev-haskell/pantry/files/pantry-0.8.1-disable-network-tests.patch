From 9ddc22e32d46ca477cfcd5c579f69900b3bd2db4 Mon Sep 17 00:00:00 2001
From: hololeap <hololeap@users.noreply.github.com>
Date: Tue, 20 Dec 2022 12:11:27 -0700
Subject: [PATCH] Disable network tests

These tests fail when run under Gentoo's network sandbox

Signed-off-by: hololeap <hololeap@users.noreply.github.com>
---
 pantry.cabal                   |   5 --
 test/Pantry/ArchiveSpec.hs     |  19 -------
 test/Pantry/CabalSpec.hs       | 100 ---------------------------------
 test/Pantry/CasaSpec.hs        |  95 -------------------------------
 test/Pantry/GlobalHintsSpec.hs |  41 --------------
 test/Pantry/HackageSpec.hs     |  23 --------
 test/Pantry/TreeSpec.hs        |  83 ---------------------------
 test/Pantry/TypesSpec.hs       |  19 -------
 8 files changed, 385 deletions(-)
 delete mode 100644 test/Pantry/CabalSpec.hs
 delete mode 100644 test/Pantry/CasaSpec.hs
 delete mode 100644 test/Pantry/GlobalHintsSpec.hs
 delete mode 100644 test/Pantry/HackageSpec.hs
 delete mode 100644 test/Pantry/TreeSpec.hs

diff --git a/pantry.cabal b/pantry.cabal
index e1691f7..03c17a9 100644
--- a/pantry.cabal
+++ b/pantry.cabal
@@ -117,14 +117,9 @@ test-suite spec
   other-modules:
       Pantry.ArchiveSpec
       Pantry.BuildPlanSpec
-      Pantry.CabalSpec
-      Pantry.CasaSpec
       Pantry.FileSpec
-      Pantry.GlobalHintsSpec
-      Pantry.HackageSpec
       Pantry.Internal.StaticBytesSpec
       Pantry.InternalSpec
-      Pantry.TreeSpec
       Pantry.TypesSpec
       Paths_pantry
   hs-source-dirs:
diff --git a/test/Pantry/ArchiveSpec.hs b/test/Pantry/ArchiveSpec.hs
index 75e0c0a..3f70724 100644
--- a/test/Pantry/ArchiveSpec.hs
+++ b/test/Pantry/ArchiveSpec.hs
@@ -46,13 +46,6 @@ getRawPackageLocationIdent' TestArchive{..} = do
 parsePackageIdentifier' :: String -> PackageIdentifier
 parsePackageIdentifier' = fromJust . parsePackageIdentifier
 
-urlToStackCommit :: Text -> TestLocation
-urlToStackCommit commit = TLUrl $ T.concat
-  [ "https://github.com/commercialhaskell/stack/archive/"
-  , commit
-  , ".tar.gz"
-  ]
-
 treeWithoutCabalFile :: Selector PantryException
 treeWithoutCabalFile (TreeWithoutCabalFile _) = True
 treeWithoutCabalFile _ = False
@@ -83,18 +76,6 @@ spec = do
       , testSubdir = "."
       }
     ident `shouldBe` parsePackageIdentifier' "hpack-0.1.2.3"
-  it "finds cabal file from tarball with subdir 'subs/pantry/'" $ do
-    ident <- getRawPackageLocationIdent' TestArchive
-      { testLocation = urlToStackCommit "2b846ff4fda13a8cd095e7421ce76df0a08b10dc"
-      , testSubdir = "subs/pantry/"
-      }
-    ident `shouldBe` parsePackageIdentifier' "pantry-0.1.0.0"
-  it "matches whole directory name" $
-    getRawPackageLocationIdent' TestArchive
-      { testLocation = urlToStackCommit "2b846ff4fda13a8cd095e7421ce76df0a08b10dc"
-      , testSubdir = "subs/pant"
-      }
-    `shouldThrow` treeWithoutCabalFile
   it "follows symlinks to directories" $ do
     ident <- getRawPackageLocationIdent' TestArchive
       { testLocation = TLFilePath "attic/symlink-to-dir.tar.gz"
diff --git a/test/Pantry/CabalSpec.hs b/test/Pantry/CabalSpec.hs
deleted file mode 100644
index f289e10..0000000
--- a/test/Pantry/CabalSpec.hs
+++ /dev/null
@@ -1,100 +0,0 @@
-{-# LANGUAGE NoImplicitPrelude #-}
-{-# LANGUAGE OverloadedStrings #-}
-module Pantry.CabalSpec (spec) where
-
-import Test.Hspec
-import Pantry
-import qualified Pantry.SHA256 as SHA256
-import RIO
-import Distribution.Types.PackageName (mkPackageName)
-import Distribution.Types.Version (mkVersion)
-
-spec :: Spec
-spec = describe "wrong cabal file" $ do
-  let test :: HasCallStack => String -> RIO PantryApp () -> Spec
-      test name action = it name (runPantryApp action :: IO ())
-      shouldThrow' x y = withRunInIO $ \run -> run x `shouldThrow` y
-  test "Hackage" $ do
-    sha <- either throwIO pure
-         $ SHA256.fromHexBytes "71c2c685a932cd3a70ec52d7bd0ec96ecbfa5e31e22130099cd50fa073ad1a69"
-    let rpli =
-          RPLIHackage
-            (PackageIdentifierRevision
-              name
-              version3
-              (CFIHash sha (Just size)))
-            Nothing
-        go = loadCabalFileRawImmutable rpli
-        name = mkPackageName "acme-missiles"
-        version2 = mkVersion [0, 2]
-        version3 = mkVersion [0, 3]
-        size = FileSize 597
-    go `shouldThrow'` \e ->
-      case e of
-        MismatchedPackageMetadata rpli' rpm _tree ident ->
-          rpli == rpli' &&
-          rpm == RawPackageMetadata
-            { rpmName = Just name
-            , rpmVersion = Just version3
-            , rpmTreeKey = Nothing
-            } &&
-          ident == PackageIdentifier name version2
-        _ -> False
-
-  test "tarball with wrong ident" $ do
-    archiveHash' <- either throwIO pure
-                  $ SHA256.fromHexBytes "b5a582209c50e4a61e4b6c0fb91a6a7d65177a881225438b0144719bc3682c3a"
-    let rpli = RPLIArchive archive rpm
-        archive =
-            RawArchive
-              { raLocation = ALUrl "https://github.com/yesodweb/yesod/archive/yesod-auth-1.6.4.1.tar.gz"
-              , raHash = Just archiveHash'
-              , raSize = Just $ FileSize 309199
-              , raSubdir = "yesod-auth"
-              }
-        rpm =
-            RawPackageMetadata
-              { rpmName = Just acmeMissiles
-              , rpmVersion = Just version2
-              , rpmTreeKey = Nothing
-              }
-        go = loadCabalFileRawImmutable rpli
-        acmeMissiles = mkPackageName "acme-missiles"
-        version2 = mkVersion [0, 2]
-    go `shouldThrow'` \e ->
-      case e of
-        MismatchedPackageMetadata rpli' rpm' _treeKey ident ->
-          rpli == rpli' &&
-          rpm == rpm' &&
-          ident == PackageIdentifier
-            (mkPackageName "yesod-auth")
-            (mkVersion [1, 6, 4, 1])
-        _ -> False
-
-  test "tarball with wrong cabal file" $ do
-    let rpli = RPLIArchive archive rpm
-        archive =
-            RawArchive
-              { raLocation = ALUrl "https://github.com/yesodweb/yesod/archive/yesod-auth-1.6.4.1.tar.gz"
-              , raHash = either impureThrow Just
-                         $ SHA256.fromHexBytes "b5a582209c50e4a61e4b6c0fb91a6a7d65177a881225438b0144719bc3682c3a"
-              , raSize = Just $ FileSize 309199
-              , raSubdir = "yesod-auth"
-              }
-        rpm =
-            RawPackageMetadata
-              { rpmName = Just yesodAuth
-              , rpmVersion = Just badVersion
-              , rpmTreeKey = Nothing
-              }
-        go = loadCabalFileRawImmutable rpli
-        yesodAuth = mkPackageName "yesod-auth"
-        version = mkVersion [1, 6, 4, 1]
-        badVersion = mkVersion [1, 6, 4, 0]
-    go `shouldThrow'` \e ->
-      case e of
-        MismatchedPackageMetadata rpli' rpm' _treeKey ident ->
-          rpli == rpli' &&
-          rpm == rpm' &&
-          ident == PackageIdentifier yesodAuth version
-        _ -> False
diff --git a/test/Pantry/CasaSpec.hs b/test/Pantry/CasaSpec.hs
deleted file mode 100644
index 9e483d2..0000000
--- a/test/Pantry/CasaSpec.hs
+++ /dev/null
@@ -1,95 +0,0 @@
-{-# LANGUAGE OverloadedStrings #-}
-module Pantry.CasaSpec (spec) where
-
-import Distribution.Types.Version (mkVersion)
-import Pantry
-import Pantry.SHA256
-import Test.Hspec
-
-spec :: Spec
-spec = do
-  loadHackagePackageSpec
-  completeSpec
-
-completeSpec :: Spec
-completeSpec =
-  it
-    "completePackageLocation: unliftio_0_2_12"
-    (shouldReturn
-       (runPantryAppClean
-          (cplComplete <$> completePackageLocation (argsRlpi unliftio_0_2_12)))
-       ( PLIHackage
-           (PackageIdentifier
-              { pkgName = "unliftio"
-              , pkgVersion = mkVersion [0, 2, 12]
-              })
-           (argsCabalKey unliftio_0_2_12)
-           (argsTreeKey unliftio_0_2_12)))
-
-loadHackagePackageSpec :: Spec
-loadHackagePackageSpec = do
-  it
-    "loadPackageRaw Exact hackage lookup"
-    (shouldReturn
-       (fmap
-          packageTreeKey
-          (runPantryAppClean (loadPackageRaw (argsRlpi unliftio_0_2_12))))
-       (argsTreeKey unliftio_0_2_12))
-  it
-    "loadHackagePackageRaw Exact hackage lookup"
-    (shouldReturn
-       (fmap
-          packageTreeKey
-          (runPantryAppClean (loadPackageRaw (argsRlpi unliftio_0_2_12))))
-       (argsTreeKey unliftio_0_2_12))
-  it
-    "loadHackagePackageRawViaCasa Exact hackage lookup"
-    (shouldReturn
-       (fmap
-          (fmap packageTreeKey)
-          (runPantryAppClean
-             (tryLoadPackageRawViaCasa
-                (argsRlpi unliftio_0_2_12)
-                (argsTreeKey unliftio_0_2_12))))
-       (Just (argsTreeKey unliftio_0_2_12)))
-
-data Args =
-  Args
-    { argsRlpi :: !RawPackageLocationImmutable
-    , argsTreeKey :: !TreeKey
-    , argsRevision :: !PackageIdentifierRevision
-    , argsCabalKey :: !BlobKey
-    }
-
-unliftio_0_2_12 :: Args
-unliftio_0_2_12 =
-  let cabalHash = (either
-                     (error . show)
-                     id
-                     (fromHexText
-                        "b089fbc2ff2628a963c2c4b12143f2020874e3e5144ffd6c62b25639a0ca1483"))
-      cabalLen = FileSize 3325
-      cabalFileHash =
-        CFIHash
-          cabalHash
-          (Just cabalLen)
-      casaTreeKey =
-        TreeKey
-          (BlobKey
-             (either
-                (error . show)
-                id
-                (fromHexText
-                   "4971b43f3d473eff868eb1a0c359729b49f1779e78c462ba45ef0d1eda677699"))
-             (FileSize 2229))
-      pir =
-        PackageIdentifierRevision
-          "unliftio"
-          (mkVersion [0, 2, 12])
-          cabalFileHash
-   in Args
-        { argsRevision = pir
-        , argsRlpi = RPLIHackage pir (Just casaTreeKey)
-        , argsTreeKey = casaTreeKey
-        , argsCabalKey = BlobKey cabalHash cabalLen
-        }
diff --git a/test/Pantry/GlobalHintsSpec.hs b/test/Pantry/GlobalHintsSpec.hs
deleted file mode 100644
index 51ff7ff..0000000
--- a/test/Pantry/GlobalHintsSpec.hs
+++ /dev/null
@@ -1,41 +0,0 @@
-{-# LANGUAGE FlexibleContexts #-}
-{-# LANGUAGE NoImplicitPrelude #-}
-{-# LANGUAGE OverloadedStrings #-}
-module Pantry.GlobalHintsSpec (spec) where
-
-import Distribution.Types.PackageName (mkPackageName)
-import Distribution.Version (mkVersion)
-import RIO
-import Pantry (loadGlobalHints, WantedCompiler (..), runPantryAppClean)
-import Pantry.Internal
-import Test.Hspec
-import qualified RIO.Map as Map
-import Path (toFilePath)
-
-spec :: Spec
-spec = do
-    let it' name inner = it name $ example $ runPantryAppClean $ do
-          file <- getGlobalHintsFile
-          writeFileBinary (toFilePath file) "this should be ignored"
-          inner
-    it' "unknown compiler" $ do
-      mmap <- loadGlobalHints $ WCGhc (mkVersion [0, 0, 0, 0, 0, 0, 0])
-      liftIO $ mmap `shouldBe` Nothing
-    it' "known compiler" $ do
-      mmap <- loadGlobalHints $ WCGhc (mkVersion [8, 4, 3])
-      case mmap of
-        Nothing -> error "not found"
-        Just m -> liftIO $ do
-          Map.lookup (mkPackageName "ghc") m `shouldBe` Just (mkVersion [8, 4, 3])
-          Map.lookup (mkPackageName "base") m `shouldBe` Just (mkVersion [4, 11, 1, 0])
-          Map.lookup (mkPackageName "bytestring") m `shouldBe` Just (mkVersion [0, 10, 8, 2])
-          Map.lookup (mkPackageName "acme-missiles") m `shouldBe` Nothing
-    it' "older known compiler" $ do
-      mmap <- loadGlobalHints $ WCGhc (mkVersion [7, 8, 4])
-      case mmap of
-        Nothing -> error "not found"
-        Just m -> liftIO $ do
-          Map.lookup (mkPackageName "ghc") m `shouldBe` Just (mkVersion [7, 8, 4])
-          Map.lookup (mkPackageName "base") m `shouldBe` Just (mkVersion [4, 7, 0, 2])
-          Map.lookup (mkPackageName "Cabal") m `shouldBe` Just (mkVersion [1, 18, 1, 5])
-          Map.lookup (mkPackageName "acme-missiles") m `shouldBe` Nothing
diff --git a/test/Pantry/HackageSpec.hs b/test/Pantry/HackageSpec.hs
deleted file mode 100644
index 212b3fa..0000000
--- a/test/Pantry/HackageSpec.hs
+++ /dev/null
@@ -1,23 +0,0 @@
-{-# LANGUAGE NoImplicitPrelude #-}
-{-# LANGUAGE OverloadedStrings #-}
-module Pantry.HackageSpec (spec) where
-
-import Test.Hspec
-import Pantry
-import RIO
-import Distribution.Types.Version (mkVersion)
-
-spec :: Spec
-spec = do
-  it "update works" $ asIO $ void $ runPantryApp $ updateHackageIndex Nothing
-  it "fuzzy lookup kicks in" $ do
-    let pir = PackageIdentifierRevision "thisisnot-tobe-foundon-hackage-please" (mkVersion [1..3]) CFILatest
-    runPantryApp (loadPackageRaw (RPLIHackage pir Nothing))
-      `shouldThrow` \e ->
-        case e of
-          UnknownHackagePackage pir' _  -> pir == pir'
-          _ -> False
-  -- Flaky test, can be broken by new packages on Hackage.
-  it "finds acme-missiles" $ do
-    x <- runPantryApp (getHackageTypoCorrections "acme-missile")
-    x `shouldSatisfy` ("acme-missiles" `elem`)
diff --git a/test/Pantry/TreeSpec.hs b/test/Pantry/TreeSpec.hs
deleted file mode 100644
index afc28b9..0000000
--- a/test/Pantry/TreeSpec.hs
+++ /dev/null
@@ -1,83 +0,0 @@
-{-# LANGUAGE NoImplicitPrelude #-}
-{-# LANGUAGE OverloadedStrings #-}
-module Pantry.TreeSpec (spec) where
-
-import Test.Hspec
-import RIO
-import Pantry
-import qualified Pantry.SHA256 as SHA256
-import Distribution.Types.PackageName (mkPackageName)
-import Distribution.Types.Version (mkVersion)
-
-spec :: Spec
-spec = do
-  let tarURL = "https://github.com/snoyberg/file-embed/archive/47b499c3c58ca465c56ee0295d0a76782a66751d.tar.gz"
-      zipURL = "https://github.com/snoyberg/file-embed/archive/47b499c3c58ca465c56ee0295d0a76782a66751d.zip"
-      emptyPM = RawPackageMetadata
-        { rpmName = Nothing
-        , rpmVersion = Nothing
-        , rpmTreeKey = Nothing
-        }
-      mkArchive url =
-        RPLIArchive
-          RawArchive
-            { raLocation = ALUrl url
-            , raHash = Nothing
-            , raSize = Nothing
-            , raSubdir = ""
-            }
-          emptyPM
-      tarPL = mkArchive tarURL
-      zipPL = mkArchive zipURL
-      gitPL =
-          RPLIRepo
-            Repo
-              { repoUrl = "https://github.com/snoyberg/file-embed.git"
-              , repoCommit = "47b499c3c58ca465c56ee0295d0a76782a66751d"
-              , repoType = RepoGit
-              , repoSubdir = ""
-              }
-            emptyPM
-      hgPL =
-          RPLIRepo
-            Repo
-              { repoUrl = "https://bitbucket.org/snoyberg/file-embed"
-              , repoCommit = "6d8126e7a4821788a0275fa7c2c4a0083e14d690"
-              , repoType = RepoHg
-              , repoSubdir = ""
-              }
-            emptyPM
-
-  it "zip and tar.gz archives match" $ asIO $ runPantryAppClean $ do
-    pair1 <- loadPackageRaw tarPL
-    pair2 <- loadPackageRaw zipPL
-    liftIO $ pair2 `shouldBe` pair1
-  it "archive and Git repo match" $ asIO $ runPantryAppClean $ do
-    pair1 <- loadPackageRaw tarPL
-    pair2 <- loadPackageRaw gitPL
-    liftIO $ pair2 `shouldBe` pair1
-  -- https://github.com/commercialhaskell/pantry/issues/26
-  xit "archive and Hg repo match" $ asIO $ runPantryAppClean $ do
-    pair1 <- loadPackageRaw tarPL
-    pair2 <- loadPackageRaw hgPL
-    liftIO $ pair2 `shouldBe` pair1
-
-  it "5045 no cabal file" $ asIO $ runPantryAppClean $ do
-    let rpli = RPLIArchive archive rpm
-        packageName = mkPackageName "yaml"
-        version = mkVersion [0, 11, 1, 2]
-        archive =
-            RawArchive
-              { raLocation = ALUrl "https://github.com/snoyberg/yaml/archive/yaml-0.11.1.2.tar.gz"
-              , raHash = either impureThrow Just
-                         $ SHA256.fromHexBytes "b8564e99c555e670ee487bbf92d03800d955f0e6e16333610ef46534548e0a3d"
-              , raSize = Just $ FileSize 94198
-              , raSubdir = "yaml"
-              }
-        rpm =
-            RawPackageMetadata
-              { rpmName = Just packageName
-              , rpmVersion = Just version
-              , rpmTreeKey = Nothing
-              }
-    void $ loadCabalFileRawImmutable rpli
diff --git a/test/Pantry/TypesSpec.hs b/test/Pantry/TypesSpec.hs
index 04eb4d1..bbb42b6 100644
--- a/test/Pantry/TypesSpec.hs
+++ b/test/Pantry/TypesSpec.hs
@@ -208,22 +208,3 @@ spec = do
       warnings2 `shouldBe` []
       pli2 <- resolvePaths Nothing unresolvedPli2
       pli2 `shouldBe` (pli :: PackageLocationImmutable)
-
-  describe "completeSnapshotLocation" $ do
-    let sameUrl (SLUrl txt _) (RSLUrl txt' _) txt'' =
-          do
-          txt `shouldBe` txt'
-          txt `shouldBe` txt''
-        sameUrl _ _ _ = liftIO $ error "Snapshot synonym did not complete as expected"
-
-    it "default location for nightly-2020-01-01" $ do
-      let sn = Nightly $ ModifiedJulianDay 58849
-      loc <- runPantryAppClean $ completeSnapshotLocation $ RSLSynonym sn
-      sameUrl loc (defaultSnapshotLocation sn)
-        "https://raw.githubusercontent.com/commercialhaskell/stackage-snapshots/master/nightly/2020/1/1.yaml"
-
-    it "default location for lts-15.1" $ do
-      let sn = LTS 15 1
-      loc <- runPantryAppClean $ completeSnapshotLocation $ RSLSynonym sn
-      sameUrl loc (defaultSnapshotLocation sn)
-        "https://raw.githubusercontent.com/commercialhaskell/stackage-snapshots/master/lts/15/1.yaml"
-- 
2.38.2

